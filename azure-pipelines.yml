trigger:
- master

pr:
- master

variables:
  sdkVersion: 5.x
  buildConfiguration: Release
  solutionPath: KitchenService
  startupProjectPath: KitchenService/KitchenService.Api

stages:

- stage: build
  pool:
    vmImage: ubuntu-latest

  jobs:

  - job: build

    steps:

    - task: UseDotNet@2
      displayName: dotnet sdk $(sdkVersion)
      inputs:
        packageType: 'sdk'
        version: '$(sdkVersion)'

    - script: dotnet restore
      displayName: dotnet restore
      workingDirectory: $(solutionPath)

    - script: dotnet build
        --configuration $(buildConfiguration)
        --no-restore
      displayName: dotnet build
      workingDirectory: $(solutionPath)

    - script: dotnet publish
        --configuration $(buildConfiguration)
        --output $(Build.ArtifactStagingDirectory)/app
      displayName: dotnet publish
      workingDirectory: $(startupProjectPath)

    - publish: $(Build.ArtifactStagingDirectory)/app
      artifact: app
      displayName: artifact publish app

- stage: analyze
  dependsOn: []
  pool:
    vmImage: ubuntu-latest

  jobs:

  - job: analyze

    steps:

    - task: UseDotNet@2
      displayName: dotnet sdk 2.1.x
      inputs:
        packageType: 'sdk'
        version: '2.1.x'

    - task: SonarCloudPrepare@1
      displayName: sonarcloud analysis prepare
      inputs:
        SonarCloud: 'sonarcloud-escalonn'
        organization: '2011-nov02-net'
        scannerMode: 'MSBuild'
        projectKey: '2011-nov02-net_nick-project2-kitchen-svc'
        projectName: 'Nick Kitchen Service'
        extraProperties: |
          sonar.cs.vstest.reportsPaths=$(Common.TestResultsDirectory)/*.trx
          sonar.cs.opencover.reportsPaths=$(Common.TestResultsDirectory)/*/coverage.opencover.xml

    - task: UseDotNet@2
      displayName: dotnet sdk $(sdkVersion)
      inputs:
        packageType: 'sdk'
        version: '$(sdkVersion)'

    - script: dotnet build
        --configuration $(buildConfiguration)
      displayName: dotnet build
      workingDirectory: $(solutionPath)

    - script: dotnet test
        --configuration $(buildConfiguration)
        --collect:"XPlat Code Coverage"
        --logger trx
        --no-build
        --results-directory $(Common.TestResultsDirectory)
        --
        DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,opencover
      displayName: dotnet test
      workingDirectory: $(solutionPath)

    - task: SonarCloudAnalyze@1
      displayName: sonarcloud analysis run

    - task: PublishTestResults@2
      displayName: test results build publish
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '$(Common.TestResultsDirectory)/*.trx'

    - task: PublishCodeCoverageResults@1
      displayName: code coverage build publish
      condition: succeededOrFailed()
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(Common.TestResultsDirectory)/*/coverage.cobertura.xml'

    - task: SonarCloudPublish@1
      displayName: sonarcloud results build publish
      condition: succeededOrFailed()
      inputs:
        pollingTimeoutSec: '300'

- stage: deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn:
  - build
  - analyze
  pool:
    vmImage: ubuntu-latest

  jobs:

  - deployment: deploy_dev

    environment: dev

    strategy:
      runOnce:
        deploy:
          steps:

          - download: current
            artifact: app
            displayName: artifact download app

          - task: AzureRmWebAppDeployment@4
            displayName: azure app service deploy
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Pay-As-You-Go(0518cd5b-d389-4983-9496-cdcae31dcc60)'
              appType: 'webApp'
              WebAppName: 'nick-project2-kitchen-svc'
              packageForLinux: '$(Pipeline.Workspace)/app'
